# General settings for the release
[release]
# Skip the manual approval step if set to true
skip_approval = false
# Template for the release notes body. Uses {{variable}} format.
body_template = """
# Release {{tag}} for {{repo_name}}

## Changelog
{{changelog}}

## Key Assets
{{assets_links}}

## Contributors
{{contributors}}

---
_Release generated on: `{{release_date}}`_
"""

# --- Changelog Generation ---
[release.changelog]
# Diffing method: ".." (commits since last tag) or "..." (commits in this tag's history not in parent)
diff_method = ".."

# --- Contributors ---
[release.contributors]
# HTML snippet to show contributors.
template = """
<a href="https://github.com/{{owner}}/{{repo_name}}/graphs/contributors">
  <img src="https://contrib.rocks/image?repo={{owner}}/{{repo_name}}" />
</a>
"""

# --- Release Date Formatting ---
[release.date]
# Timezone offset for the release date (e.g., "+08:00", "-05:00")
timezone = "+08:00"

# --- Release Assets ---
[release.assets]
# List of glob patterns for files to include in the release.
include = ["*.zip", "*.tar.gz"]
# List of glob patterns for files to exclude from the release.
exclude = ["debug_symbols.zip"]
# Associate content of a file (matched by regex) to a release body variable.
# The key 'assets_links' matches the {{assets_links}} variable in the body_template.
[release.assets.associate]
assets_links = "release_notes.md" # Link content of release_notes.md

# Job for pre-build checks and tests.
[check]
# Define the matrix for running check jobs.
[check.matrix]
os = ["ubuntu-latest", "windows-latest"]
python-version = ["3.9", "3.10"]
# Script to run for each matrix combination.
# Variables like ${{ matrix.os }} will be available.
run_script = ".github/release.d/python-check.sh"

# Job for building the final release artifacts.
[build]
# Define the matrix for running build jobs.
[build.matrix]
# Example: Build for different targets
os = ["ubuntu-latest"]
target = ["x86_64", "arm64"]
# Script to run for building.
run_script = ".github/release.d/build-python.sh"
