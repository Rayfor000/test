# This workflow creates a new GitHub Release when a tag is pushed.
# It automatically generates a changelog and can optionally attach assets built by the `build-assets.yml` workflow.

name: Create GitHub Release

on:
  push:
    tags:
      - "v*" # Trigger on tags like v1.0, v1.2.3

permissions:
  contents: write # Needed to create releases and upload assets

jobs:
  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Required to fetch all history for git log

      - name: Generate Changelog and Release Body
        id: generate_changelog
        run: |
          # Get the previous tag. If there's no previous tag, this will be empty.
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 `git rev-list --tags --skip=1 --max-count=1` || echo "")

          # Generate the list of commit summaries
          if [ -z "$PREVIOUS_TAG" ]; then
            echo "No previous tag found. Creating changelog from the first commit."
            CHANGELOG=$(git log ${{ github.ref_name }} --pretty=format:'* %s (`%h`)')
            # Generate the Full Changelog URL for the first release
            FULL_CHANGELOG_URL="https://github.com/${{ github.repository }}/commits/${{ github.ref_name }}"
          else
            echo "Generating changelog from $PREVIOUS_TAG to ${{ github.ref_name }}"
            CHANGELOG=$(git log $PREVIOUS_TAG..${{ github.ref_name }} --pretty=format:'* %s (`%h`)')
            # Generate the Full Changelog URL for subsequent releases
            FULL_CHANGELOG_URL="https://github.com/${{ github.repository }}/compare/$PREVIOUS_TAG..${{ github.ref_name }}"
          fi

          # Combine all parts into the final release body file
          cat <<EOF > changelog.md
          ### What's Changed
          ${CHANGELOG}

          **Full Changelog**: ${FULL_CHANGELOG_URL}
          EOF

          echo "changelog_path=changelog.md" >> $GITHUB_OUTPUT

      - name: Download build assets (if they exist)
        id: download_assets
        uses: dawidd6/action-download-artifact@v3
        continue-on-error: true # If artifact is not found, continue without failing
        with:
          workflow: build-assets.yml
          name: release-assets
          branch: main

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.event.repository.name }} ${{ github.ref_name }}
          body_path: ${{ steps.generate_changelog.outputs.changelog_path }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        # This step will only run if the download step was successful
        if: steps.download_assets.outcome == 'success'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release-assets.zip
          asset_name: release-assets.zip
          asset_content_type: application/zip
